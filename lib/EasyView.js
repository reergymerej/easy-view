// Generated by CoffeeScript 1.10.0
(function() {
  var $, EasyView, fs, getElementFromTemplatePath, parseBindAttribute, path;

  $ = require('jquery');

  path = require('path');

  fs = require('fs');

  parseBindAttribute = function(value) {
    var handlers, pairs;
    handlers = {};
    if (value) {
      pairs = value.split(',');
      pairs.forEach(function(pair) {
        var parts;
        parts = pair.split(':');
        if (parts.length === 2) {
          return handlers[parts[0].trim()] = parts[1].trim();
        }
      });
    }
    if (Object.keys(handlers).length) {
      return handlers;
    } else {
      return void 0;
    }
  };

  getElementFromTemplatePath = function(templatePath) {
    var absoluteTemplatePath, file;
    absoluteTemplatePath = path.join(__dirname, templatePath);
    file = fs.readFileSync(absoluteTemplatePath, 'utf8');
    return $(file);
  };

  module.exports = EasyView = (function() {
    function EasyView(parentElement) {
      if (parentElement) {
        this.render(parentElement);
      }
    }

    EasyView.prototype.render = function(parent) {
      var element;
      element = getElementFromTemplatePath(this.template);
      this.bind(element, this);
      return $(parent).append(element);
    };

    EasyView.prototype.bind = function(element, scope) {
      var bindString, children, handlers, me;
      me = this;
      children = element.children();
      if (children.length) {
        children.each(function(i, item) {
          return me.bind($(item), me);
        });
      }
      bindString = element.attr('data-bind');
      handlers = parseBindAttribute(bindString);
      if (handlers) {
        return Object.keys(handlers).forEach(function(event) {
          var method, methodName;
          methodName = handlers[event];
          method = scope[methodName];
          if (typeof method === 'function') {
            return element.on(event, function() {
              return method(element);
            });
          } else {
            return console.warn('unable to find method "' + methodName + '" in', scope);
          }
        });
      }
    };

    return EasyView;

  })();

}).call(this);
